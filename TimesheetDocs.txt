Timesheet Management system 

-----------------------------------------------------
Abstraction:

	    Online Timesheet web application for 
	student, faculty, admin...

Our organization has hundreds of Students  in different programmes and every programm has different schedules separated based on their 
learning courses (eg: In our institute we have DAC, DBDA, DITISS etc).
All these students and faculties record their attendance in Biometrics System, manual Roll call, etc. 
Additionally, the Admin may be contacting with the students, faculties under them
on a range of different platforms – phone, email and social media. Asking for reports, following up on projects.
It is a dynamic and useful web application that provides an automated and centralized method of tracking and
monitoring daily work time for active projects by enabling admins to track students attendance and faculties work time and efforts
spent while working on various projects performing tasks assigned to them, also leaves can be recorded. 
It optimizes resources utilization and measures the performance and productivity(All you need is a device and Internet). Without this
application, it can be difficult to extract required information for time analysis, hard to generate reports,
Admins can lose sight of what their student and faculty are up to in reality, which means that they can't offer the right
support at the right time – while a lack of oversight can also result in a lack of accountability from the them.


------------------------------------------------------------------------------------------------------------------------
Encapusulation:

Application users will interact with online Timesheet web application (WebSite).
Portal User interface invoke Online Timesheet management logic from remote web services.
Web services hosted on Web Server will encapsulate Business Logic of online Timesheet from web site
Bussiness Logic will encapsulate student assignmets and attendance performance, faculty Billing, review logic from Web services.
Business logic will invoke business data from database in form of result sets after query processing by database.
Database will perform DML, SQL , Stored Procedure Execution at Database server level and hide interal implementation.

------------------------------------------------------------------------------------------------------------------------
Polmorphsim & Inheritance:

Business Objects will be defined using Class Hiearchy Admin, Faculty, Director, Student, etc.

------------------------------------------------------------------------------------------------------------------------
Modularity:

	Dashboard Module: Timesheet Management System (TMS) allows student, faculties to enter their daily work (assignments, attendance, teaching, etc)
	in timesheet easily and efficiently. Dashboard will show the Timesheet date wise.

	Master Module:Master module is basically for Admin. In this module admin will be able to create new
	tasks and sub-tasks and assign it to the student.

	Reports Module: Report Module will allow the Students of the institute to see their detailed timesheet
	date wise , monthly. Faculties can also filter their data as needed to generate report.
	Student and Faculties can not see any others data and also data of higher authorities. 

	TimeSheet Module: This is a platform where each and everyone can feed their daily work done. Reports
	are generated based on the Work and duration entered in the timesheet by them.

------------------------------------------------------------------------------------------------------------------------
Concurrency:

      	Online Timesheet Management System Operations are under execution parallely for Student, faculty, Admin.

------------------------------------------------------------------------------------------------------------------------
Persistence:

	All related data will be stored  in Database for future work.
	

	DFD : Data Flow Diagrams
	Process:  Filling and Updating Timesheets, generating reports based on it.
	External entity: Student, Faculty.



------------------------------------------------------------------------------------------------------------------------
: Institute Opertions

ER Diagrams: (Entity Relationship Diagrams)

OOAD UML Diagrams


------------------------------------------------------------------------------------------------------------------------
Database:

Create database Timesheet;
create table Student(
	);

database.sql